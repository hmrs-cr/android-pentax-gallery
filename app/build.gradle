apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def versionMajor = 1
def versionMinor = 2
def verCode = 2
def APP_NAME = "PentaxGallery"

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmms')
    return formattedDate
}


def versionStringBase = "${versionMajor}.${versionMinor}.${verCode}-${buildTime()}"


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.hmsoft." + APP_NAME.toLowerCase()
        minSdkVersion 21
        targetSdkVersion 28
        versionName versionStringBase
        versionCode verCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == "release") {
                outputFileName = APP_NAME + "-${variant.versionName}.apk"
            }
        }
    }

    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation("com.squareup.okhttp3:okhttp:4.2.0")
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'androidx.exifinterface:exifinterface:1.1.0-alpha01'
}
